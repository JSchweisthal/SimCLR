# distributed training
nodes: 1
gpus: 1 # I recommend always assigning 1 GPU to 1 node
nr: 0 # machine nr. in node (0 -- nodes - 1)
dataparallel: 0 # Use DataParallel instead of DistributedDataParallel
workers: 4 #8 didn't work
dataset_dir: "./datasets"

# train options
seed: 42 # sacred handles automatic seeding when passed in the config
batch_size: 128
image_size: 224
workers: 4 # here were 16
start_epoch: 0
epochs: 100
dataset: "CIFAR10" # STL10

# pretrain: True 

# model options
resnet: "resnet50"
normalize: True
projection_dim: 128 # "[...] to project the representation to a 128-dimensional latent space"

# loss options
optimizer: "Adam" # or LARS (experimental)
temperature: 0.5 # see appendix B.7.: Optimal temperature under different batch sizes

weight_decay: 1.0e-6 # "optimized using LARS [...] and weight decay of 10âˆ’6"

# reload options
model_path: "logs/CIFAR10/all/superviseddebiasedPU" # set to the directory containing `checkpoint_##.tar` 
# model_path: "save" # set to the directory containing `checkpoint_##.tar` 
# model_num: 100 # set to checkpoint number
epoch_num: 100 # set to checkpoint number
reload: False

# mixed-precision training
fp16: False 
fp16_opt_level: "O2"

# logistic regression options
logistic_batch_size: 256
logistic_epochs: 100 #500


######################################

# option for full or imbalanced Pu Subset
data_pretrain: "imbalanced" #options: "all", "imbalanced"
data_classif: "PU" #options: "binary", "PU"
# # PU ratio (labeled positives / all positives for binary PU setting)
PU_ratio: 0.2

############################################
# select pretrain-loss function specified in simclr/modules/new_loss.py

loss_pretrain: "NT_Xent"
# loss params
# prior: 0.1
# C: -1.

### debiased
debiased: True
tau_plus: 0.32 # 

